// var CustomAuthenticator = Ember.SimpleAuth.Authenticators.Base.extend({
    // ...
// });

App.CustomAuthenticator = Ember.SimpleAuth.Authenticators.OAuth2.extend({
  authenticate: function(credentials) {
    return new Ember.RSVP.Promise(function(resolve, reject) {
      // make the request to authenticate the user at endpoint /v3/token
      Ember.$.ajax({
        url:  '/v3/token',
        type: 'POST',
        data: { grant_type: 'password', username: credentials.identification, password: credentials.password }
      }).then(function(response) {
        Ember.run(function() {
          // resolve (including the account id) as the AJAX request was successful; all properties this promise resolves
          // with will be available through the session
          resolve({ access_token: response.access_token, account_id: response.account_id });
        });
      }, function(xhr, status, error) {
        Ember.run(function() {
          reject(xhr.responseText);
        });
      });
    });
  }
});

export default {
  name: 'authentication',
  initialize: function(container, application) {
    // customize the session so that it allows access to the account object
    Ember.SimpleAuth.Session.reopen({
      account: function() {
        var accountId = this.get('account_id');
        if (!Ember.isEmpty(accountId)) {
          return container.lookup('store:main').find('account', accountId);
        }
      }.property('accountId')
    });
    // register the custom authenticator so the session can find it
    container.register('authenticator:custom', App.CustomAuthenticator);
    Ember.SimpleAuth.setup(container, application, {
      // configure an authorizer so the accound model can be read from the server
      authorizerFactory: 'ember-simple-auth-authorizer:oauth2-bearer'
    });
    // Ember.SimpleAuth.setup(container, application);
  }

  /*
  initialize: function(container, application) {
    Ember.SimpleAuth.Authenticators.OAuth2.reopen({
      serverTokenEndpoint: 'http://customdomain/access_token'
    });

    Ember.SimpleAuth.setup(container, application, { // @todo at version 0.1.2 of Ember-simple-auth, add container
      crossOriginWhitelist: ['http://customdomain'], // @todo remove when live
      // store: Ember.SimpleAuth.Stores.LocalStorage,
      authenticationRoute: 'login'
    });
  }

  initialize: function(container, application) {
    // console.log("this is simple auth inited!");
    Ember.SimpleAuth.setup(container, application, {
      authorizerFactory: 'authorizer:custom',
      storeFactory: 'ember-simple-auth-session-store:local-storage'
    });
  }
  initialize: function(container, application) {
    container.register('authenticator:custom', CustomAuthenticator);
    Ember.SimpleAuth.setup(container, application);
  }
  */
};
